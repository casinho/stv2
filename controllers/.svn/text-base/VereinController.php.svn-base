<?php
class VereinController extends Controller {
    
    /**
     * @return array action filters
     */
    public function filters()
    {
        return array(
                'accessControl', // perform access control for CRUD operations
                'postOnly + delete', // we only allow deletion via POST request
        );
    }

    /**
     * Specifies the access control rules.
     * This method is used by the 'accessControl' filter.
     * @return array access control rules
     */
    public function accessRules()
    {
	    return array(
	            array('allow',
	                    'actions'=>array('detail'),
	                    'users'=>array('*'),
	            ),
	            array('allow',
	                    'actions'=>array('index', 'create', 'update', 'admin', 'delete', 'view', 'delete'),
	                    'roles'=>array('super-admin'),
	            ),
	            array('deny',  // deny all users
	                    'users'=>array('*'),
	            ),
	    );
	}

	public function actionDetail() {
		$saisonId 								= Saison::model()->getAktuelleSaisonId(Yii::app()->params['wettbewerbId']);
		$saison 								= Saison::model()->findByPk($saisonId);		
		$verein_id								= Yii::app()->request->getParam('verein_id', 1);
		$verein									= Verein::model()->findByPk($verein_id);
		$bilanz									= $verein->getBilanzBySaison($saisonId);
		$vereine								= $verein->getVereineVonSaison($saisonId);
		$fehlentscheidungen						= Spiel::model()->getFehlentscheidungenDetailVereinBySaison($verein->verein_id,$saisonId);
		$spiele									= Spiel::model()->getSpieleByVereinAndSaison($verein->verein_id,$saisonId);
		$wahreTabelle							= $saison->getWahreTabelleEinfachBySpieltag(35);
		
		
		foreach($wahreTabelle as $k => $v) {
			if($v['verein_id'] == $verein_id) {
				$datenWahreTabelle = $v;
				$datenWahreTabelle['platz'] = $k+1;
			}	
		}
		$offizielleTabelle							= $saison->getOffizielleTabelleEinfachBySpieltag(35);
		foreach($offizielleTabelle as $k => $v) {
			if($v['verein_id'] == $verein_id) {
				$datenOffizielleTabelle = $v;
				$datenOffizielleTabelle ['platz'] = $k+1;
			}	
		}
		
		
		$viewparams = array(
    			'saisonId' => $saisonId,
    			'verein_id' => $verein_id,
    			'verein' => $verein,
    			'bilanz' => $bilanz,
    			'vereine' => $vereine,
    			'spiele' => $spiele,
    			'wahreTabelle' => $datenWahreTabelle,
    			'offizielleTabelle' => $datenOffizielleTabelle,
    			'fehlentscheidungen' => $fehlentscheidungen,
        );
		$this->breadcrumbs = array($verein['vereinsname']);
		$this->render('detail',$viewparams);
	}

    /**
     * Displays a particular model.
     * @param integer $id the ID of the model to be displayed
     */
    public function actionView($id)
    {
        $this->render('view',array(
            'model'=>$this->loadModel($id),
        ));
    }

    /**
     * Creates a new model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     */
    public function actionCreate()
    {
        $model=new Verein;

        // Uncomment the following line if AJAX validation is needed
        // $this->performAjaxValidation($model);

        if(isset($_POST['Verein']))
        {
            $model->attributes=$_POST['Verein'];
            if($model->save())
                $this->redirect(array('view','id'=>$model->verein_id));
        }

        $this->render('create',array(
            'model'=>$model,
        ));
    }

    /**
     * Updates a particular model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id the ID of the model to be updated
     */
    public function actionUpdate($id)
    {
        $model=$this->loadModel($id);

        // Uncomment the following line if AJAX validation is needed
        // $this->performAjaxValidation($model);

        if(isset($_POST['Verein']))
        {
            $model->attributes=$_POST['Verein'];
            if($model->save())
                $this->redirect(array('view','id'=>$model->verein_id));
        }

        $this->render('update',array(
            'model'=>$model,
        ));
    }

    /**
     * Deletes a particular model.
     * If deletion is successful, the browser will be redirected to the 'admin' page.
     * @param integer $id the ID of the model to be deleted
     */
    public function actionDelete($id)
    {
        $this->loadModel($id)->delete();

        // if AJAX request (triggered by deletion via admin grid view), we should not redirect the browser
        if(!isset($_GET['ajax']))
            $this->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin'));
    }

    /**
     * Lists all models.
     */
    public function actionIndex()
    {
        $dataProvider=new CActiveDataProvider('Verein');
        $this->render('index',array(
            'dataProvider'=>$dataProvider,
        ));
    }

    /**
     * Manages all models.
     */
    public function actionAdmin()
    {
        $model=new Verein('search');
        $model->unsetAttributes();  // clear any default values
        if(isset($_GET['Verein']))
            $model->attributes=$_GET['Verein'];

        $this->render('admin',array(
            'model'=>$model,
        ));
    }

    /**
     * Returns the data model based on the primary key given in the GET variable.
     * If the data model is not found, an HTTP exception will be raised.
     * @param integer the ID of the model to be loaded
     */
    public function loadModel($id)
    {
        $model=Verein::model()->findByPk($id);
        if($model===null)
            throw new CHttpException(404,'The requested page does not exist.');
        return $model;
    }

    /**
     * Performs the AJAX validation.
     * @param CModel the model to be validated
     */
    protected function performAjaxValidation($model)
    {
        if(isset($_POST['ajax']) && $_POST['ajax']==='verein-form')
        {
            echo CActiveForm::validate($model);
            Yii::app()->end();
        }
    }
} 